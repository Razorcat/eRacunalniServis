//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eRacunalniServis_Servis.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class eProdajaEntities : DbContext
    {
        public eProdajaEntities()
            : base("name=eProdajaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Dobavljaci> Dobavljaci { get; set; }
        public virtual DbSet<Izlazi> Izlazi { get; set; }
        public virtual DbSet<IzlazStavke> IzlazStavke { get; set; }
        public virtual DbSet<JediniceMjere> JediniceMjere { get; set; }
        public virtual DbSet<Korisnici> Korisnici { get; set; }
        public virtual DbSet<KorisniciUloge> KorisniciUloge { get; set; }
        public virtual DbSet<Kupci> Kupci { get; set; }
        public virtual DbSet<NarudzbaStavke> NarudzbaStavke { get; set; }
        public virtual DbSet<Narudzbe> Narudzbe { get; set; }
        public virtual DbSet<Ocjene> Ocjene { get; set; }
        public virtual DbSet<Proizvodi> Proizvodi { get; set; }
        public virtual DbSet<Servisi> Servisi { get; set; }
        public virtual DbSet<ServisStanje> ServisStanje { get; set; }
        public virtual DbSet<Skladista> Skladista { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Ulazi> Ulazi { get; set; }
        public virtual DbSet<UlazStavke> UlazStavke { get; set; }
        public virtual DbSet<Uloge> Uloge { get; set; }
        public virtual DbSet<VrsteProizvoda> VrsteProizvoda { get; set; }
        public virtual DbSet<ServisOcjene> ServisOcjene { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Korisnici_Insert(string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Korisnici_Insert", imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByKorisnickoIme(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByKorisnickoIme", mergeOption, korisnickoImeParameter);
        }
    
        public virtual int esp_KorisniciUloge_Insert(Nullable<int> korisnikID, Nullable<int> ulogaID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var ulogaIDParameter = ulogaID.HasValue ?
                new ObjectParameter("UlogaID", ulogaID) :
                new ObjectParameter("UlogaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_Insert", korisnikIDParameter, ulogaIDParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_KorisniciUloge_SelectByKorisnik(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_KorisniciUloge_SelectByKorisnik", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_KorisniciUloge_SelectByKorisnik(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_KorisniciUloge_SelectByKorisnik", mergeOption, korisnikIDParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_Uloge_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_Uloge_SelectAll");
        }
    
        public virtual ObjectResult<Uloge> esp_Uloge_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_Uloge_SelectAll", mergeOption);
        }
    
        public virtual ObjectResult<esp_Korisnici_SelectByName_Result> esp_Korisnici_SelectByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Korisnici_SelectByName_Result>("esp_Korisnici_SelectByName", nameParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectById(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectById", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectById(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectById", mergeOption, korisnikIDParameter);
        }
    
        public virtual int esp_Korisnici_UpdateStatus(Nullable<int> korisnikID, Nullable<bool> status)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_UpdateStatus", korisnikIDParameter, statusParameter);
        }
    
        public virtual int esp_Korisnici_ResetPass(Nullable<int> korisnikID, string lozinkaSalt, string lozinkaHash)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_ResetPass", korisnikIDParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual int esp_Korisnici_Update(Nullable<int> korisnikID, string ime, string prezime, string email, string telefon)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_Update", korisnikIDParameter, imeParameter, prezimeParameter, emailParameter, telefonParameter);
        }
    
        public virtual int esp_KorisniciUloge_Delete(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_Delete", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Dobavljaci> esp_Dobavljaci_SelectById(Nullable<int> dobavljacID)
        {
            var dobavljacIDParameter = dobavljacID.HasValue ?
                new ObjectParameter("DobavljacID", dobavljacID) :
                new ObjectParameter("DobavljacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dobavljaci>("esp_Dobavljaci_SelectById", dobavljacIDParameter);
        }
    
        public virtual ObjectResult<Dobavljaci> esp_Dobavljaci_SelectById(Nullable<int> dobavljacID, MergeOption mergeOption)
        {
            var dobavljacIDParameter = dobavljacID.HasValue ?
                new ObjectParameter("DobavljacID", dobavljacID) :
                new ObjectParameter("DobavljacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dobavljaci>("esp_Dobavljaci_SelectById", mergeOption, dobavljacIDParameter);
        }
    
        public virtual ObjectResult<Dobavljaci> esp_Dobavljaci_SelectByNaziv(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dobavljaci>("esp_Dobavljaci_SelectByNaziv", nazivParameter);
        }
    
        public virtual ObjectResult<Dobavljaci> esp_Dobavljaci_SelectByNaziv(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dobavljaci>("esp_Dobavljaci_SelectByNaziv", mergeOption, nazivParameter);
        }
    
        public virtual int esp_Proizvodi_Insert(string naziv, string sifra, Nullable<decimal> cijena, Nullable<int> vrstaID, Nullable<int> jedinicaMjereID, byte[] slika, byte[] slikaThumb)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var jedinicaMjereIDParameter = jedinicaMjereID.HasValue ?
                new ObjectParameter("JedinicaMjereID", jedinicaMjereID) :
                new ObjectParameter("JedinicaMjereID", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Proizvodi_Insert", nazivParameter, sifraParameter, cijenaParameter, vrstaIDParameter, jedinicaMjereIDParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual ObjectResult<Proizvodi> esp_Proizvodi_SelectById(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodi>("esp_Proizvodi_SelectById", proizvodIDParameter);
        }
    
        public virtual ObjectResult<Proizvodi> esp_Proizvodi_SelectById(Nullable<int> proizvodID, MergeOption mergeOption)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodi>("esp_Proizvodi_SelectById", mergeOption, proizvodIDParameter);
        }
    
        public virtual ObjectResult<esp_Proizvodi_SelectBySifraNaziv_Result> esp_Proizvodi_SelectBySifraNaziv(string sifra, string naziv)
        {
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Proizvodi_SelectBySifraNaziv_Result>("esp_Proizvodi_SelectBySifraNaziv", sifraParameter, nazivParameter);
        }
    
        public virtual ObjectResult<esp_Proizvodi_SelectByVrsta_Result> esp_Proizvodi_SelectByVrsta(Nullable<int> vrstaID)
        {
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Proizvodi_SelectByVrsta_Result>("esp_Proizvodi_SelectByVrsta", vrstaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Ulazi_Insert(string brojFakture, Nullable<System.DateTime> datum, Nullable<decimal> iznosRacuna, Nullable<decimal> pDV, string napomena, Nullable<int> skladisteID, Nullable<int> korisnikID, Nullable<int> dobavljacID)
        {
            var brojFaktureParameter = brojFakture != null ?
                new ObjectParameter("BrojFakture", brojFakture) :
                new ObjectParameter("BrojFakture", typeof(string));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosRacunaParameter = iznosRacuna.HasValue ?
                new ObjectParameter("IznosRacuna", iznosRacuna) :
                new ObjectParameter("IznosRacuna", typeof(decimal));
    
            var pDVParameter = pDV.HasValue ?
                new ObjectParameter("PDV", pDV) :
                new ObjectParameter("PDV", typeof(decimal));
    
            var napomenaParameter = napomena != null ?
                new ObjectParameter("Napomena", napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var dobavljacIDParameter = dobavljacID.HasValue ?
                new ObjectParameter("DobavljacID", dobavljacID) :
                new ObjectParameter("DobavljacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Ulazi_Insert", brojFaktureParameter, datumParameter, iznosRacunaParameter, pDVParameter, napomenaParameter, skladisteIDParameter, korisnikIDParameter, dobavljacIDParameter);
        }
    
        public virtual int esp_UlazStavke_Insert(Nullable<int> ulazID, Nullable<int> proizvodID, Nullable<int> kolicina, Nullable<decimal> cijena)
        {
            var ulazIDParameter = ulazID.HasValue ?
                new ObjectParameter("UlazID", ulazID) :
                new ObjectParameter("UlazID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_UlazStavke_Insert", ulazIDParameter, proizvodIDParameter, kolicinaParameter, cijenaParameter);
        }
    
        public virtual ObjectResult<VrsteProizvoda> esp_VrsteProizvoda_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VrsteProizvoda>("esp_VrsteProizvoda_SelectAll");
        }
    
        public virtual ObjectResult<VrsteProizvoda> esp_VrsteProizvoda_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VrsteProizvoda>("esp_VrsteProizvoda_SelectAll", mergeOption);
        }
    
        public virtual ObjectResult<JediniceMjere> esp_JediniceMjere_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JediniceMjere>("esp_JediniceMjere_SelectAll");
        }
    
        public virtual ObjectResult<JediniceMjere> esp_JediniceMjere_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JediniceMjere>("esp_JediniceMjere_SelectAll", mergeOption);
        }
    
        public virtual int esp_Dobavljaci_Insert(string naziv, string kontaktOsoba, string adresa, string telefon, string fax, string web, string email, string ziroRacun, string napomena)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var kontaktOsobaParameter = kontaktOsoba != null ?
                new ObjectParameter("KontaktOsoba", kontaktOsoba) :
                new ObjectParameter("KontaktOsoba", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("Web", web) :
                new ObjectParameter("Web", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ziroRacunParameter = ziroRacun != null ?
                new ObjectParameter("ZiroRacun", ziroRacun) :
                new ObjectParameter("ZiroRacun", typeof(string));
    
            var napomenaParameter = napomena != null ?
                new ObjectParameter("Napomena", napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Dobavljaci_Insert", nazivParameter, kontaktOsobaParameter, adresaParameter, telefonParameter, faxParameter, webParameter, emailParameter, ziroRacunParameter, napomenaParameter);
        }
    
        public virtual ObjectResult<Dobavljaci> esp_Dobavljaci_SelectByNazivAll(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dobavljaci>("esp_Dobavljaci_SelectByNazivAll", nazivParameter);
        }
    
        public virtual ObjectResult<Dobavljaci> esp_Dobavljaci_SelectByNazivAll(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dobavljaci>("esp_Dobavljaci_SelectByNazivAll", mergeOption, nazivParameter);
        }
    
        public virtual int esp_Dobavljaci_UpdateStatus(Nullable<int> dobavljacID, Nullable<bool> status)
        {
            var dobavljacIDParameter = dobavljacID.HasValue ?
                new ObjectParameter("DobavljacID", dobavljacID) :
                new ObjectParameter("DobavljacID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Dobavljaci_UpdateStatus", dobavljacIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_Servisi_GetLastID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_Servisi_GetLastID");
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Servisi_Insert(string naziv, Nullable<int> kupacID, byte[] qRcode)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var qRcodeParameter = qRcode != null ?
                new ObjectParameter("QRcode", qRcode) :
                new ObjectParameter("QRcode", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Servisi_Insert", nazivParameter, kupacIDParameter, qRcodeParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectByName", nameParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectByName(string name, MergeOption mergeOption)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectByName", mergeOption, nameParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectById(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectById", kupacIDParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectById(Nullable<int> kupacID, MergeOption mergeOption)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectById", mergeOption, kupacIDParameter);
        }
    
        public virtual int esp_ServisStanje_Insert(Nullable<int> servisID, string opis)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_ServisStanje_Insert", servisIDParameter, opisParameter);
        }
    
        public virtual ObjectResult<Servisi> esp_Servisi_GetALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Servisi>("esp_Servisi_GetALL");
        }
    
        public virtual ObjectResult<Servisi> esp_Servisi_GetALL(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Servisi>("esp_Servisi_GetALL", mergeOption);
        }
    
        public virtual int esp_Kupci_Insert(string ime, string prezime, string email, string korisnickoIme, string lozinkaHash, string lozinkaSalt, Nullable<bool> status)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Kupci_Insert", imeParameter, prezimeParameter, emailParameter, korisnickoImeParameter, lozinkaHashParameter, lozinkaSaltParameter, statusParameter);
        }
    
        public virtual int esp_Kupci_UpdateStatus(Nullable<int> kupacID, Nullable<bool> status)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Kupci_UpdateStatus", kupacIDParameter, statusParameter);
        }
    
        public virtual int esp_Kupci_UpdatePodatke(Nullable<int> kupacID, string ime, string prezime, string email, string korisnickoIme, string lozinkaHash, string lozinkaSalt)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Kupci_UpdatePodatke", kupacIDParameter, imeParameter, prezimeParameter, emailParameter, korisnickoImeParameter, lozinkaHashParameter, lozinkaSaltParameter);
        }
    
        public virtual ObjectResult<ServisStanje> esp_ServisStanje_GetAllById(Nullable<int> servisID)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServisStanje>("esp_ServisStanje_GetAllById", servisIDParameter);
        }
    
        public virtual ObjectResult<ServisStanje> esp_ServisStanje_GetAllById(Nullable<int> servisID, MergeOption mergeOption)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServisStanje>("esp_ServisStanje_GetAllById", mergeOption, servisIDParameter);
        }
    
        public virtual ObjectResult<Servisi> esp_Servis_GetById(Nullable<int> servisID)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Servisi>("esp_Servis_GetById", servisIDParameter);
        }
    
        public virtual ObjectResult<Servisi> esp_Servis_GetById(Nullable<int> servisID, MergeOption mergeOption)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Servisi>("esp_Servis_GetById", mergeOption, servisIDParameter);
        }
    
        public virtual int esp_Servis_UpdateStatus(Nullable<int> servisID, Nullable<bool> popravljeno)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            var popravljenoParameter = popravljeno.HasValue ?
                new ObjectParameter("Popravljeno", popravljeno) :
                new ObjectParameter("Popravljeno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Servis_UpdateStatus", servisIDParameter, popravljenoParameter);
        }
    
        public virtual ObjectResult<esp_Proizvodi_SelectByVrstaNaziv_Result> esp_Proizvodi_SelectByVrstaNaziv(Nullable<int> vrstaID, string naziv, Nullable<int> offset, Nullable<int> maxRows, ObjectParameter totalRows)
        {
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var offsetParameter = offset.HasValue ?
                new ObjectParameter("Offset", offset) :
                new ObjectParameter("Offset", typeof(int));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("MaxRows", maxRows) :
                new ObjectParameter("MaxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Proizvodi_SelectByVrstaNaziv_Result>("esp_Proizvodi_SelectByVrstaNaziv", vrstaIDParameter, nazivParameter, offsetParameter, maxRowsParameter, totalRows);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectByKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectByKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectByKorisnickoIme(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectByKorisnickoIme", mergeOption, korisnickoImeParameter);
        }
    
        public virtual int esp_Proizvodi_UpdateStatus(Nullable<int> proizvodID, Nullable<bool> status)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Proizvodi_UpdateStatus", proizvodIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<esp_Skladista_GetStanjeById_Result> esp_Skladista_GetStanjeById(Nullable<int> skladisteID)
        {
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Skladista_GetStanjeById_Result>("esp_Skladista_GetStanjeById", skladisteIDParameter);
        }
    
        public virtual ObjectResult<esp_Proizvodi_GetPopularne_Result> esp_Proizvodi_GetPopularne()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Proizvodi_GetPopularne_Result>("esp_Proizvodi_GetPopularne");
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Izlazi_Insert(string brojRacuna, Nullable<int> korisnikID, Nullable<bool> zakljucen, Nullable<decimal> iznosBezPDV, Nullable<decimal> iznosSaPDV, Nullable<int> skladisteID)
        {
            var brojRacunaParameter = brojRacuna != null ?
                new ObjectParameter("BrojRacuna", brojRacuna) :
                new ObjectParameter("BrojRacuna", typeof(string));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var zakljucenParameter = zakljucen.HasValue ?
                new ObjectParameter("Zakljucen", zakljucen) :
                new ObjectParameter("Zakljucen", typeof(bool));
    
            var iznosBezPDVParameter = iznosBezPDV.HasValue ?
                new ObjectParameter("IznosBezPDV", iznosBezPDV) :
                new ObjectParameter("IznosBezPDV", typeof(decimal));
    
            var iznosSaPDVParameter = iznosSaPDV.HasValue ?
                new ObjectParameter("IznosSaPDV", iznosSaPDV) :
                new ObjectParameter("IznosSaPDV", typeof(decimal));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Izlazi_Insert", brojRacunaParameter, korisnikIDParameter, zakljucenParameter, iznosBezPDVParameter, iznosSaPDVParameter, skladisteIDParameter);
        }
    
        public virtual int esp_Izlazi_UpdateZakljucen(Nullable<int> izlazID, Nullable<bool> zakljucen)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            var zakljucenParameter = zakljucen.HasValue ?
                new ObjectParameter("Zakljucen", zakljucen) :
                new ObjectParameter("Zakljucen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Izlazi_UpdateZakljucen", izlazIDParameter, zakljucenParameter);
        }
    
        public virtual int esp_IzlazStavke_Insert(Nullable<int> izlazID, Nullable<int> proizvodID, Nullable<int> kolicina, Nullable<decimal> cijena, Nullable<decimal> popust)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var popustParameter = popust.HasValue ?
                new ObjectParameter("Popust", popust) :
                new ObjectParameter("Popust", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_IzlazStavke_Insert", izlazIDParameter, proizvodIDParameter, kolicinaParameter, cijenaParameter, popustParameter);
        }
    
        public virtual ObjectResult<esp_Izlaz_SelectByDatum_Result> esp_Izlaz_SelectByDatum(Nullable<System.DateTime> datumOd, Nullable<System.DateTime> datumDo)
        {
            var datumOdParameter = datumOd.HasValue ?
                new ObjectParameter("DatumOd", datumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = datumDo.HasValue ?
                new ObjectParameter("DatumDo", datumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlaz_SelectByDatum_Result>("esp_Izlaz_SelectByDatum", datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<esp_Narudzbe_SelectAktivne_Result> esp_Narudzbe_SelectAktivne()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Narudzbe_SelectAktivne_Result>("esp_Narudzbe_SelectAktivne");
        }
    
        public virtual int esp_Narudzbe_UpdateStatus(Nullable<int> narudzbaID, Nullable<bool> status)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Narudzbe_UpdateStatus", narudzbaIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<esp_Izlazi_GetPovijestProdaje_Result> esp_Izlazi_GetPovijestProdaje()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlazi_GetPovijestProdaje_Result>("esp_Izlazi_GetPovijestProdaje");
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Narudzbe_Insert(string brojNarudzbe, Nullable<int> kupacID, Nullable<System.DateTime> datum, Nullable<bool> status)
        {
            var brojNarudzbeParameter = brojNarudzbe != null ?
                new ObjectParameter("BrojNarudzbe", brojNarudzbe) :
                new ObjectParameter("BrojNarudzbe", typeof(string));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Narudzbe_Insert", brojNarudzbeParameter, kupacIDParameter, datumParameter, statusParameter);
        }
    
        public virtual int esp_NarudzbeStavke_Insert(Nullable<int> narudzbaID, Nullable<int> proizvodID, Nullable<int> kolicina)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_NarudzbeStavke_Insert", narudzbaIDParameter, proizvodIDParameter, kolicinaParameter);
        }
    
        public virtual ObjectResult<esp_Narudzbe_SelectAktivneByKupacID_Result> esp_Narudzbe_SelectAktivneByKupacID(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Narudzbe_SelectAktivneByKupacID_Result>("esp_Narudzbe_SelectAktivneByKupacID", kupacIDParameter);
        }
    
        public virtual int esp_Narudzbe_Otkazi(Nullable<int> narudzbaID, Nullable<bool> otkazano)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var otkazanoParameter = otkazano.HasValue ?
                new ObjectParameter("Otkazano", otkazano) :
                new ObjectParameter("Otkazano", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Narudzbe_Otkazi", narudzbaIDParameter, otkazanoParameter);
        }
    
        public virtual ObjectResult<Servisi> esp_Servisi_GetTopFiveByKupacId(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Servisi>("esp_Servisi_GetTopFiveByKupacId", kupacIDParameter);
        }
    
        public virtual ObjectResult<Servisi> esp_Servisi_GetTopFiveByKupacId(Nullable<int> kupacID, MergeOption mergeOption)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Servisi>("esp_Servisi_GetTopFiveByKupacId", mergeOption, kupacIDParameter);
        }
    
        public virtual ObjectResult<ServisStanje> esp_ServisiStanje_GetTopFiveByServisId(Nullable<int> servisID)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServisStanje>("esp_ServisiStanje_GetTopFiveByServisId", servisIDParameter);
        }
    
        public virtual ObjectResult<ServisStanje> esp_ServisiStanje_GetTopFiveByServisId(Nullable<int> servisID, MergeOption mergeOption)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServisStanje>("esp_ServisiStanje_GetTopFiveByServisId", mergeOption, servisIDParameter);
        }
    
        public virtual int esp_Proizvodi_InsertOcjena(Nullable<int> proizvodID, Nullable<int> kupacID, Nullable<int> ocjena)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var ocjenaParameter = ocjena.HasValue ?
                new ObjectParameter("Ocjena", ocjena) :
                new ObjectParameter("Ocjena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Proizvodi_InsertOcjena", proizvodIDParameter, kupacIDParameter, ocjenaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_Ocjene_GetOcjenuByKupacId(Nullable<int> kupacID, Nullable<int> proizvodID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_Ocjene_GetOcjenuByKupacId", kupacIDParameter, proizvodIDParameter);
        }
    
        public virtual int esp_ServisOcjene_Insert(Nullable<int> kupacID, Nullable<int> ocjena)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var ocjenaParameter = ocjena.HasValue ?
                new ObjectParameter("Ocjena", ocjena) :
                new ObjectParameter("Ocjena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_ServisOcjene_Insert", kupacIDParameter, ocjenaParameter);
        }
    
        public virtual ObjectResult<esp_Izlazi_GetRacunByID_Result> esp_Izlazi_GetRacunByID(Nullable<int> izlazID)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlazi_GetRacunByID_Result>("esp_Izlazi_GetRacunByID", izlazIDParameter);
        }
    }
}
